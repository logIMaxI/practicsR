48144,
43686,
48163,
50208,
51714,
51530,
53287,
56882,
61832,
64059,
79003,
98909
)
lm(data = data,aes(x=Price,y=Borthity))
ggplot(data = data,aes(x=Price,y=Borthity))+
geom_point()
cor.test(data$Salary,data$Price)
cor.test(data$Borthity,data$Salary)
cor.test(data$Borthity,data$Price)
data$Marriage <- c(897327,
1001589,
1019762,
1091778,
979667,
1066366,
1113562,
1262500,
1179007,
1199446,
1215066,
1316011,
1213598,
1225501,
1225985,
1161068,
985836,
1049735,
893039,
950167,
770857,
923550
)
ggplot(data=data,aes(x=Marriage,y=Borthity))+
geom_point()
cor.test(data$Borthity,data$Marriage)
ggplot(data=data,aes(x=Year,y=Marriage))+
geom_point()
data$Salary <- c()
data$Price <- c()
data$Ecology <- c(32301,33291,33930,34652,35751,35835,35510,35532,33952,32754,32353,32628,32469,32063,31228,31269,31617,32068,32327,22735,22228,22300)
ggplot(data=data,aes(x=Ecology,y=Borthity))+
geom_point(0)
ggplot(data=data,aes(x=Ecology,y=Borthity))+geom_point()
cor.test(data$Borthity,data$Ecology)
data[20,1] <- 2014
data[20,"Year"] <- 2014
View(data)
data[20,1] <- 2019
data[14,1] <- 2014
data[14,1] <- 2013
data[15,1] <- 2014
data$Price <- c(8678,
10567,
12939,
16320,
20810,
25394,
36221,
47482,
52504,
47715,
48144,
43686,
48163,
50208,
51714,
51530,
53287,
56882,
61832,
64059,
79003,
98909
)
data$Salary <- c(2223,
3240,
4360,
5499,
6740,
8555,
10634,
13593,
17290,
18638,
20952,
23369,
26629,
29792,
32495,
34030,
36709,
39167,
43724,
47867,
51344,
57244
)
data$Borthity <- (data$Borthity-mean(data$Borthity))/sd(data$Borthity)
data$Marriage <- (data$Marriage-mean(data$Marriage))/sd(data$Marriage)
data$Ecology <- (data$Ecology-mean(data$Ecology))/sd(data$Ecology)
data$Price <- (data$Price-mean(data$Price))/sd(data$Price)
data$Salary <- (data$Salary-mean(data$Salary))/sd(data$Salary)
lm(data=data,Borthity¬Marriage)
lm(data=data,Borthity~Marriage)
ggplot(data=data,aes(x=Marriage,y=Borthity))+
geom_point(0)
ggplot(data=data,aes(x=Marriage,y=Borthity))+geom_point()
cor.test(data$Borthity,data$Marriage)
ggplot(data=data,aes(x=Salary,y=Borthity))+geom_point()
cor.test(data$Borthity,data$Salary)
ggplot(data=data,aes(x=Ecology,y=Borthity))+geom_point()
ggplot(data=data,aes(x=Salary,y=Borthity))+geom_point()
cor.test(data$Borthity,data$Salary,method="spearman")
cor.test(data$Borthity,data$Marriage,data$Salary)
cor.test(data$Salary,data$Borthity)
ggplot(data=data,aes(x=Salary,y=Borthity))+geopm_point()
ggplot(data=data,aes(x=Salary,y=Borthity))+geom_point()
ggplot(data=data,aes(x=Salary*Salary,y=Borthity))+geom_point()
cor.test(data$Salary*data$Salary,data$Borthity)
lm(data=data,Borthity~Salary)
summary(lm(data=data,Borthity~Salary))
summary(lm(data=data,Borthity~Salary*Salary))
summary(lm(data=data,Borthity~poly(Salary,2)))
y <- c(20, 35, 30, 45, 60, 69, 75, 90, 105, 110)
x1 <- c(10, 15, 20, 25, 40, 37, 43, 35, 38, 55)
x2 <- c(12, 10, 9, 9, 8, 8, 6, 4, 4, 5)
summary(lm(y~x1+x2))
summary(lm(y~x1*x2))
data$Borthity <- read.table(file = "clipboard",sep = "\t", header=TRUE)
data$Borthity <- read.table(file = "clipboard",sep = "\t", header=F)
data$Marriage <- read.table(file = "clipboard",sep = "\t", header=F)
data$Marriage <- read.table(file = "clipboard",sep = "\t", header=F)
data$Ecology <- read.table(file = "clipboard",sep = "\t", header=F)
data$Ecology <- read.table(file = "clipboard",sep = "\t", header=F)
data$Ecology <- c(32301,33291,33930,34652,35751,35835,35510,35532,33952,32754,32353,32628,32469,32063,31228,31269,31617,32068,32327,22735,22228,22300)
data$Price <- read.table(file = "clipboard",sep = "\t", header=F)
data$Salary <- read.table(file = "clipboard",sep = "\t", header=F)
summary(lm(data$Borthity~data$Salary))
data$Borthity <- unlist(data$Borthity)
data$Marriage <- unlist(data$Marriage)
data$Price <- unlist(data$Price)
data$Salary <- unlist(data$Salary)
summary(lm(data$Borthity~data$Salary))
summary(lm(data$Borthity~data$Salary*data$Salary))
ggplot(data=data,aes(x=Salary,y=Borthity))+geom_point()
ggplot(data=data,aes(x=Salary*Salary,y=Borthity))+geom_point()
ggplot(data=data,aes(x=poly(Salary,2),y=Borthity))+geom_point()
summary(lm(data$Borthity~poly(data$Salary,2)))
data$Salary*data$Salary
c(3,5)*c(3,6)
c(3,5)^2
ggplot(data=data,aes(x=Salary^2,y=Borthity))+geom_point()
ggplot(data=data,aes(x=Salary,y=ln(Borthity)))+geom_point()
ln(c(3,5))
log(c(3,5))
ggplot(data=data,aes(x=Salary,y=log(Borthity)))+geom_point()
ggplot(data=data,aes(x=Ecology,y=Borthity))+geom_point(0)
ggplot(data=data,aes(x=Ecology,y=Borthity))+geom_point()
cor.test(data$Borthity,data$Ecology,method = "spearman")
ggplot(data=data,aes(x=Marriage,y=Borthity))+geom_point()
cor.test(data$Marriage,data$Borthity)
cor.test(data$Marrage,data$Borthity,method="spearman")
cor.test(data$Marriage,data$Borthity,method = "spearman")
summary(lm(Borthity~Marriage+Ecology+Price,data = data))
summary(lm(Borthity~Marriage+Ecology+Salary,data=data))
summary(lm(Borthity~poly(2,Marriage)+Salary+Ecology,data=data))
summary(lm(Borthity~poly(Marriage,2)+Salary+Ecology,data=data))
summary(lm(Borthity~poly(Salary,2)+Marriage+Ecology,data=data))
summary(lm(Borthity~poly(Salary,2)+poly(Marriage,2)+poly(Ecology,2),data=data))
summary(lm(Borthity~poly(Salary,2)),data=data)
summary(lm(Borthity~poly(Salary,2),data=data))
BorthityStandart <- (data$Borthity-mean(data$Borthity))/sd(data$Borthity)
BorthityStandart <- (data$Borthity-mean(data$Borthity))/sd(data$Borthity)+
BorthityStandart <- (data$Borthity-mean(data$Borthity))/sd(data$Borthity)+
BorthityStandart <- (data$Borthity-mean(data$Borthity))/sd(data$Borthity)+
BorthityStandart <- (data$Borthity-mean(data$Borthity))/sd(data$Borthity)+
e
MarriageStandart <- (data$Marriage-mean(data$Marriage))/sd(data$Marriage)
EcologyStandart <- (data$Ecology-mean(data$Ecology))/sd(data$Ecology)
SalaryStandart <- (data$Salary-mean(data$Salary))/sd(data$Salary)
PriceStandart <- (data$Price-mean(data$Price))/sd(data$Price)
getwd
getwd()
setwd("C:/Users/maxxx/Downloads")
get(wd)
getwd()
setwd("C:/Users/maxxx/Downloads/practicsR")
getwd()
setwd("~/")
#-------------------------(1)
df <- read.csv("https://raw.githubusercontent.com/qwerty29544/RpracticeBook/master/2Data/01FlatTables/GAZ.csv",
sep = '\t', header = T)
View(df)
df$дата.замера <- as.Date(df$дата.замера, format = '%d/%m/%Y')
#-------------------------(2)
df <- df[which(!is.na(df)),]
#-------------------------(2)
df <- df[which(!is.na(df)),]
#-------------------------(2)
df <- df[which(!is.na(df))]
#-------------------------(2)
df <- df[which(!is.na(df)), ]
which(is.na(df))
which(is.na(df), arr.ind = T)
#-------------------------(2)
df <- df[-which(is.na(df))]
w
w
#-------------------------(2)
df <- df[-which(is.na(df))['row'],]
View(df)
w.githubusercontent.com/qwerty29544/RpracticeBook/master/2Data/01FlatTables/GAZ.csv",
#-------------------------(1)
df <- read.csv("https://raw.githubusercontent.com/qwerty29544/RpracticeBook/master/2Data/01FlatTables/GAZ.csv",
sep = '\t', header = T)
df$дата.замера <- as.Date(df$дата.замера, format = '%d/%m/%Y')
View(df)
#-------------------------(2)
df <- df[-which(df == " "), ]
#-------------------------(2)
df <- df[-which(df == " "), ]
#-------------------------(2)
df <- df[-which(df == ' '), ]
#-------------------------(2)
df <- df[-which(df == ''), ]
#-------------------------(2)
df <- df[-which(df == ' '), ]
#-------------------------(2)
df <- df[-which(df == ), ]
#-------------------------(2)
df <- df[-which(df == " "), ]
which(df == " ")
#-------------------------(2)
df <- df[-which(class(df)!='date' &&df == " "), ]
#-------------------------(2)
df <- df[-which(class(df)!='date' && df == " "), ]
class(df[1,])
class(df[,1])
#-------------------------(2)
df <- df[-which(class(df)!='Date' && df == " "), ]
#-------------------------(2)
df <- df[-which(class(df)!=Date && df == " "), ]
df[df != ' ']
#-------------------------(1)
df <- read.csv("https://raw.githubusercontent.com/qwerty29544/RpracticeBook/master/2Data/01FlatTables/GAZ.csv",
sep = '\t', header = T, na.strings = NA)
df <- ifelse(df == ' ', NA, df)
df <- ifelse(df == '', NA, df)
#----------------------(1)
df <- read.csv("https://raw.githubusercontent.com/qwerty29544/RpracticeBook/master/2Data/01FlatTables/GAZ.csv",
header = T, sep = '\t')
df$дата.замера <- as.Date(df$дата.замера, format = "%d/%m/%Y")
#----------------------(2)
df <- df[-which(df == "", arr.ind = T)[,1], ]
#----------------------(3)
library(stringr)
library(stringr)
df[, 2] <- str_replace_all(df[, 2], ',', '.')
df[, 3] <- str_replace_all(df[, 3], ',', '.')
df[, 4] <- str_replace_all(df[, 4], ',', '.')
df[, 5] <- str_replace_all(df[, 5], ',', '.')
df[, 6] <- str_replace_all(df[, 6], ',', '.')
df[,c(2:6)] <- apply(X = df[,c(2:6)], MARGIN = 2, FUN = as.numeric)
df[, 3] <- as.numeric(df[,3]) + 273
colnames(df)[3] <- "Туст.K"
df <- cbind(df, df[, 4] / df[,5])
df <- cbind(df, df[, 4] / df[,6])
df <- cbind(df, df[, 6] / df[,5])
colnames(df) <- append(colnames(df)[colnames(df) != ""],
c("gas_cond", "gas_water", "water_cond"))
df <- cbind(df, df[, 6] / df[,5])
#----------------------(5)
df <- cbind(df, df[, 4] / df[,5])
df <- cbind(df, df[, 4] / df[,6])
#----------------------(6)
subset_2018 <- df[]
df <- df[, c(1:9)]
?cbind
df <- cbind(df, df[, 4] / df[,5])
df <- cbind(df, df[, 4] / df[,6])
df <- cbind(df, df[, 6] / df[,5])
colnames(df[, c(10:12)]) <- c("gas_cond", "gas_water",
"water_cond")
?dplyr
#----------------------(4)
df[,c('ID', 'Куст', 'Группа')] <- as.factor(df[,c('ID',
'Куст', 'Группа')])
#----------------------(1)
df <- read.csv("https://raw.githubusercontent.com/qwerty29544/RpracticeBook/master/2Data/01FlatTables/GAZ.csv",
header = T, sep = '\t')
#----------------------(1)
df <- read.csv("https://raw.githubusercontent.com/qwerty29544/RpracticeBook/master/2Data/01FlatTables/GAZ.csv",
header = T, sep = '\t')
df$дата.замера <- as.Date(df$дата.замера, format = "%d/%m/%Y")
View(df)
View(df)
View(df)
#----------------------(1)
df <- read.csv("https://raw.githubusercontent.com/qwerty29544/RpracticeBook/master/2Data/01FlatTables/GAZ.csv",
header = T, sep = '\t')
df$дата.замера <- as.Date(df$дата.замера, format = "%d/%m/%Y")
#----------------------(2)
df <- df[-which(df == "", arr.ind = T)[,1], ]
View(df)
#----------------------(3)
library(stringr)
df[, 2] <- str_replace_all(df[, 2], ',', '.')
df[, 3] <- str_replace_all(df[, 3], ',', '.')
df[, 4] <- str_replace_all(df[, 4], ',', '.')
df[, 5] <- str_replace_all(df[, 5], ',', '.')
df[, 6] <- str_replace_all(df[, 6], ',', '.')
df[,c(2:6)] <- apply(X = df[,c(2:6)], MARGIN = 2, FUN = as.numeric)
df[, 3] <- as.numeric(df[,3]) + 273
colnames(df)[3] <- "Туст.K"
#----------------------(4)
df[,c('ID', 'Куст', 'Группа')] <- apply(X = df[,c('ID', 'Куст', 'Группа')],
MARGIN = 2, FUN = factor)
#----------------------(5)
df$газ_конд <- cbind(df, df[, 4] / df[,5])
df$газ_вода <- cbind(df, df[, 4] / df[,6])
df$вода_конд <- cbind(df, df[, 6] / df[,5])
df <- df[,c(1:9)]
#----------------------(5)
df$газ_конд <- df[, 4] / df[,5]
df$газ_вода <- df[, 4] / df[,6]
df$вода_конд <- df[, 6] / df[,5]
df[df$газ_конд == 0 | df$газ_вода == 0 | df$вода_конд == 0 |]
df[df$газ_конд == 0 | df$газ_вода == 0 | df$вода_конд == 0]
df[,df$газ_конд == 0 | df$газ_вода == 0 | df$вода_конд == 0]
df[df != 0 & !is.na(df) & df != Inf]
#----------------------(6)
df <- df[-which(df == 0 | is.na(df) | df == Inf, arr.ind = T)[, 1],]
subset_2018 <-
#----------------------(7)
subset_ID_111 <- subset(df, df[,"ID"] == 111)
View(subset_2018)
View(subset_ID_111)
View(subset_2018)
View(df)
#----------------------(8)
subset <- df[, c(6,7)]
subset <- aggregate(x = subset, by = list(subset$ID), FUN = max)
View(subset)
subset <- aggregate(x = subset, by = list(subset$ID), FUN = max)[,c(2,3)]
View(subset)
#----------------------(8)
inset <- df[, c(6,7)]
inset <- aggregate(x = inset, by = list(inbset$ID), FUN = max)[,c(2,3)]
inset <- aggregate(x = inset, by = list(inset$ID), FUN = max)[,c(2,3)]
View(inset)
ID_vectors <- subset(inset, inset$вода.м3.сут <= 2, select = "ID")
View(ID_vectors)
View(subset)
View(inset)
ID_vectors
View(inset)
#----------------------(9)
inset <- df[, c(4,7)]
View(inset)
#----------------------(9)
inset <- df[, c(4:7)]
inset$добыча <- apply(X = inset[, c(1:3)], MARGIN = 1, FUN = sum)
df <- df[, c(4:5)]
inset <- inset[, c(4:5)]
#----------------------(1)
df <- read.csv("https://raw.githubusercontent.com/qwerty29544/RpracticeBook/master/2Data/01FlatTables/GAZ.csv",
header = T, sep = '\t')
df$дата.замера <- as.Date(df$дата.замера, format = "%d/%m/%Y")
#----------------------(2)
df <- df[-which(df == "", arr.ind = T)[,1], ]
df[, 2] <- str_replace_all(df[, 2], ',', '.')
df[, 3] <- str_replace_all(df[, 3], ',', '.')
df[, 4] <- str_replace_all(df[, 4], ',', '.')
df[, 5] <- str_replace_all(df[, 5], ',', '.')
df[, 6] <- str_replace_all(df[, 6], ',', '.')
df[,c(2:6)] <- apply(X = df[,c(2:6)], MARGIN = 2, FUN = as.numeric)
df[, 3] <- as.numeric(df[,3]) + 273
colnames(df)[3] <- "Туст.K"
#----------------------(4)
df[,c('ID', 'Куст', 'Группа')] <- apply(X = df[,c('ID', 'Куст', 'Группа')],
MARGIN = 2, FUN = factor)
#----------------------(5)
df$газ_конд <- df[, 4] / df[,5]
df$газ_вода <- df[, 4] / df[,6]
df$вода_конд <- df[, 6] / df[,5]
#----------------------(6)
df <- df[-which(df == 0 | is.na(df) | df == Inf, arr.ind = T)[, 1],]
inset <- aggregate(x = inset, by = list(inset$ID), FUN = min)[,c(2,3)]
ID_vectors <- subset(inset, inset$добыча <= 1000, select = "ID")
View(ID_vectors)
ID_vectors <- subset(inset, inset$добыча >= 1000, select = "ID")
#----------------------(10)
inset$ID[which.max(inset$добыча)]
#----------------------(10)
inset <- df[, c(4,7)]
inset <- aggregate(x = inset, by = list(inset$ID), FUN = sum)
View(inset)
class(inset$газ.м3.сут)
#----------------------(10)
inset <- df[, c(4,7)]
inset <- aggregate(x = inset, by = list(inset$ID), FUN = sum)
#----------------------(8)
inset <- df[, c(6,7)]
inset <- aggregate(x = inset, by = list(inset$ID), FUN = max)
#----------------------(10)
inset <- df[, c(4,7)]
inset <- aggregate(x = inset, by = list(inset$ID), FUN = sum)
inset <- aggregate(x = inset, by = list(inset$газ.м3.сут), FUN = sum)
inset <- aggregate(x = inset, by = list(inset$газ.м3.сут), FUN = sum)
inset <- aggregate(x = inset, by = list(inset$ID), FUN = sum)
inset[class(inset) != numeric]
inset[is.numeric(inset)]
inset[is.numeric(inset),]
is.numeric(inset)
inset <- aggregate(x = inset[, 1], by = list(inset$ID), FUN = sum)
inset$ID[which.max(inset$x)]
inset$ID[which.max(inset)]
inset$ID[which.max(inset$x)]
which.max(inset$x)
inset$Group.1[9]
colnames(inset) <- c('ID', 'добыча')
inset$ID[which.max(inset$x)]
inset$ID[which.max(inset$добыча)]
#----------------------(12)
inset <- df[, c("Группа", "газ_вода")]
inset <- aggregate(x = inset[, 2], by = list(inset$Группа), FUN = max)
View(inset)
colnames(inset) <- c("Группа", "газ_вода")
inset$Группа[which.max(inset$газ_вода)]
#----------------------(10)
inset <- df[, c(1, 4, 7)]
View(inset)
inset <- inset[(as.Date('31-12-2018', format = "%d-%m-%Y") -
inset[, 1] <= 365]
inset <- inset[(as.Date('31-12-2018', format = "%d-%m-%Y") -
inset[, 1] >= 0) & (as.Date('31-12-2018', format = "%d-%m-%Y") -
inset[, 1] <= 365)]
inset <- inset[,(as.Date('31-12-2018', format = "%d-%m-%Y") -
inset[, 1] >= 0) & (as.Date('31-12-2018', format = "%d-%m-%Y") -
inset[, 1] <= 365)]
inset <- inset[(as.Date('31-12-2018', format = "%d-%m-%Y") -
inset[, 1] >= 0) & (as.Date('31-12-2018', format = "%d-%m-%Y") -
inset[, 1] <= 365),]
inset <- inset[, c(2,3)]
inset <- aggregate(x = inset[, 1], by = list(inset$ID), FUN = sum)
colnames(inset) <- c('ID', 'добыча')
inset$ID[which.max(inset$добыча)]
#----------------------(10)
inset <- df[, c(1, 4, 9)]
inset <- inset[(as.Date('31-12-2018', format = "%d-%m-%Y") -
inset[, 1] >= 0) & (as.Date('31-12-2018', format = "%d-%m-%Y") -
inset[, 1] <= 365),]
inset <- inset[, c(2,3)]
inset <- aggregate(x = inset[, 1], by = list(inset$Группа), FUN = sum)
colnames(inset) <- c('Группа', 'добыча')
inset$Группа[which.max(inset$добыча)]
#----------------------(11)
inset <- df[, c(1, 6, 8)]
inset <- inset[(as.Date('31-12-2018', format = "%d-%m-%Y") -
inset[, 1] >= 0) & (as.Date('31-12-2018', format = "%d-%m-%Y") -
inset[, 1] <= 365),]
inset <- inset[, c(2,3)]
inset <- aggregate(x = inset[, 1], by = list(inset$Группа), FUN = sum)
View(inset)
inset <- aggregate(x = inset[, 1], by = list(inset$Куст), FUN = sum)
colnames(inset) <- c('Куст', 'добыча')
inset$Группа[which.max(inset$добыча)]
inset$Куст[which.max(inset$добыча)]
#----------------------(12)
inset <- df[, c("Куст", "газ_вода")]
inset <- aggregate(x = inset[, 2], by = list(inset$Куст), FUN = max)
colnames(inset) <- c("Куст", "газ_вода")
inset$Куст[which.max(inset$газ_вода)]
#----------------------(9)
inset <- df[, c(4:7)]
inset$добыча <- apply(X = inset[, c(1:3)], MARGIN = 1, FUN = sum)
inset <- inset[, c(4:5)]
View(inset)
inset <- aggregate(x = inset, by = list(inset$ID), FUN = min)[,c(2,3)]
ID_vectors <- subset(inset, inset$добыча >= 1000, select = "ID")
View(ID_vectors)
order(inset)
sort(inset)
sort(inset[, 2])
inset
sort(inset[, 2], decreasing = T)
#----------------------(9)
inset <- df[, c(4:7)]
inset$добыча <- apply(X = inset[, c(1:3)], MARGIN = 1, FUN = sum)
inset <- inset[, c(4:5)]
inset <- aggregate(x = inset, by = list(inset$ID), FUN = min)[,c(2,3)]
ID_vectors <- subset(inset, inset$добыча >= 1000, select = "ID")
if (length(ID_vectors) == 0 | length(ID_vectors) == len(inset$ID)){
sort(inset[, 2], decreasing = T)[c(1:3)]
} else{
ID_vectors
}
if (length(ID_vectors) == 0 | length(ID_vectors) == length(inset$ID)){
sort(inset[, 2], decreasing = T)[c(1:3)]
} else{
ID_vectors
}
