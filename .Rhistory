geom_point(alpha = 0.5) +
scale_color_manual(values = c("yellow", "green"))+
scale_size(name = "male_share", range = c(.1, 24))
ggplot(data = demography, aes(x = young_share, y = old_share, size = male_share,
color = male)) +
geom_point(alpha = 0.5) +
scale_color_manual(values = c("yellow", "green"))+
scale_size(name = "male_share", range = c(.1, 20))
#--------------------(1)
ggplot(data = mtcars, aes(x = hp, y = wt)) +
geom_point(aes(size = cyl, color = as.factor(am)),
alpha = 0.5) +
labs(title = "Relation of horsepower and weight",
x = "horsepower (hp)",
y = "weight (wt)",
color = "Transmission",
size = "Cylinder's count") +
scale_color_manual(values = c("green", "red"),
labels = c("Auto", "Mech"))
#--------------------(1)
ggplot(data = mtcars, aes(x = hp, y = wt)) +
geom_point(aes(size = cyl, color = as.factor(am)),
alpha = 0.5) +
labs(title = "Relation of horsepower and weight",
x = "horsepower (hp)",
y = "weight (wt)",
color = "Transmission",
size = "Cylinder's count") +
scale_color_manual(values = c("green", "red"),
labels = c("Auto", "Mech"))+
scale_size(name = "Cylinder's count", range = c(.1, 10))
#--------------------(1)
ggplot(data = mtcars, aes(x = hp, y = wt)) +
geom_point(aes(size = cyl, color = as.factor(am)),
alpha = 0.5) +
labs(title = "Relation of horsepower and weight",
x = "horsepower (hp)",
y = "weight (wt)",
color = "Transmission",
size = "Cylinder's count") +
scale_color_manual(values = c("green", "red"),
labels = c("Auto", "Mech"))+
scale_size(name = "Cylinder's count", range = c(.2, 10))
#--------------------(1)
ggplot(data = mtcars, aes(x = hp, y = wt)) +
geom_point(aes(size = cyl, color = as.factor(am)),
alpha = 0.5) +
labs(title = "Relation of horsepower and weight",
x = "horsepower (hp)",
y = "weight (wt)",
color = "Transmission",
size = "Cylinder's count") +
scale_color_manual(values = c("green", "red"),
labels = c("Auto", "Mech"))+
scale_size(name = "Cylinder's count", range = c(10))
#--------------------(1)
ggplot(data = mtcars, aes(x = hp, y = wt)) +
geom_point(aes(size = cyl, color = as.factor(am)),
alpha = 0.5) +
labs(title = "Relation of horsepower and weight",
x = "horsepower (hp)",
y = "weight (wt)",
color = "Transmission",
size = "Cylinder's count") +
scale_color_manual(values = c("green", "red"),
labels = c("Auto", "Mech"))+
scale_size(name = "Cylinder's count", range = c(.5, 10))
#--------------------(1)
ggplot(data = mtcars, aes(x = hp, y = wt)) +
geom_point(aes(size = cyl, color = as.factor(am)),
alpha = 0.5) +
labs(title = "Relation of horsepower and weight",
x = "horsepower (hp)",
y = "weight (wt)",
color = "Transmission",
size = "Cylinder's count") +
scale_color_manual(values = c("green", "red"),
labels = c("Auto", "Mech"))+
scale_size(name = "Cylinder's count", range = c(.5, 30))
#--------------------(1)
ggplot(data = mtcars, aes(x = hp, y = wt)) +
geom_point(aes(size = cyl, color = as.factor(am)),
alpha = 0.5) +
labs(title = "Relation of horsepower and weight",
x = "horsepower (hp)",
y = "weight (wt)",
color = "Transmission",
size = "Cylinder's count") +
scale_color_manual(values = c("green", "red"),
labels = c("Auto", "Mech"))+
scale_size(name = "Cylinder's count", range = c(.1, 20))
#--------------------(1)
ggplot(data = mtcars, aes(x = hp, y = wt)) +
geom_point(aes(size = cyl, color = as.factor(am)),
alpha = 0.5) +
labs(title = "Relation of horsepower and weight",
x = "horsepower (hp)",
y = "weight (wt)",
color = "Transmission",
size = "Cylinder's count") +
scale_color_manual(values = c("green", "red"),
labels = c("Auto", "Mech"))+
scale_size(name = "Cylinder's count", range = c(.1, 5))
#--------------------(1)
ggplot(data = mtcars, aes(x = hp, y = wt)) +
geom_point(aes(size = cyl, color = as.factor(am)),
alpha = 0.5) +
labs(title = "Relation of horsepower and weight",
x = "horsepower (hp)",
y = "weight (wt)",
color = "Transmission",
size = "Cylinder's count") +
scale_color_manual(values = c("green", "red"),
labels = c("Auto", "Mech"))+
scale_size(name = "Cylinder's count", range = c(1, 10))
#--------------------(1)
ggplot(data = mtcars, aes(x = hp, y = wt)) +
geom_point(aes(size = cyl, color = as.factor(am)),
alpha = 0.5) +
labs(title = "Relation of horsepower and weight",
x = "horsepower (hp)",
y = "weight (wt)",
color = "Transmission",
size = "Cylinder's count") +
scale_color_manual(values = c("green", "red"),
labels = c("Auto", "Mech"))+
scale_size(name = "Cylinder's count", range = c(5, 10))
#--------------------(1)
ggplot(data = mtcars, aes(x = hp, y = wt)) +
geom_point(aes(size = cyl, color = as.factor(am)),
alpha = 0.5) +
labs(title = "Relation of horsepower and weight",
x = "horsepower (hp)",
y = "weight (wt)",
color = "Transmission",
size = "Cylinder's count") +
scale_color_manual(values = c("green", "red"),
labels = c("Auto", "Mech"))+
scale_size(name = "Cylinder's count", range = c(5, 15))
ggplot(data = mtcars, aes(x = hp)) +
geom_histogram(fill = "brown",
color = "black",
bins = 6) +
labs(title = "Gross horsepower",
x = "Horsepower",
y = "count") +
facet_grid(~am,
labeller = labeller(am = c("0" = "Automatic",
"1" = "Mechanic")))
View(sleep)
#--------------------(3)
ggplot(sleep, aes(y = extra, group = group, fill = group)) +
geom_boxplot() +
labs(title = "Distribution of 'extra'",
x = ":)",
y = "extra") +
scale_fill_manual(values = c("yellow", "lightblue"))
#--------------------(3)
ggplot(sleep, aes(y = extra, group = as.factor(group), fill = group)) +
geom_boxplot() +
labs(title = "Distribution of 'extra'",
x = "groups",
y = "extra") +
scale_fill_manual(values = c("yellow", "lightblue"))
#--------------------(3)
ggplot(sleep, aes(x = group, y = extra,
group = as.factor(group), fill = group)) +
geom_boxplot() +
labs(title = "Distribution of 'extra'",
x = "groups",
y = "extra") +
scale_fill_manual(values = c("yellow", "lightblue"))
covid_data <- read.csv("data_output.csv")
covid_data <- read.csv("data_output.csv")
covid_data <- read.csv("data_output.csv")
covid_data <- read.csv("data_output.csv")
View(covid_data)
covid_data <- read.csv("data_output.csv")
ggplot(covid_data, aes(x = 1:nrow(cvd), y = X_Sweden)) +
geom_line(lwd = I(0.5), lty = 1) +
geom_point(cex = I(0.4)) +
coord_cartesian(xlim = c(1, nrow(covid_data)),
ylim = range(covid_data$X_Sweden)) +
labs(title = "COVID diseased count in the France",
subtitle = paste("to", min(covid_data$X),
"from", max(covid_data$X)),
x = "Date",
y = "Diseased count") +
scale_x_continuous(n.breaks = 15) +
scale_y_continuous(n.breaks = 15)
ggplot(covid_data, aes(x = 1:nrow(covid_data), y = X_Sweden)) +
geom_line(lwd = I(0.5), lty = 1) +
geom_point(cex = I(0.4)) +
coord_cartesian(xlim = c(1, nrow(covid_data)),
ylim = range(covid_data$X_Sweden)) +
labs(title = "COVID diseased count in the France",
subtitle = paste("to", min(covid_data$X),
"from", max(covid_data$X)),
x = "Date",
y = "Diseased count") +
scale_x_continuous(n.breaks = 15) +
scale_y_continuous(n.breaks = 15)
covid_data <- read.csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv",
sep = '\t')
View(covid_data)
View(covid_data)
)
covid_data <- read.csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv",)
covid_data <- read.csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv")
)
covid_data <- read.csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv")
View(covid_data)
colnames(covid_data[, c(5:)])
colnames(covid_data[, c(5:length(covid_data))])
as.Date(colnames(covid_data[, c(5:length(covid_data))]), format="%d.%m.%y")
as.Date(colnames(covid_data[, c(5:length(covid_data))]), format="x%d.%m.%y")
View(covid_data)
covid_data <- subset(x = covid_data, select = covid_data$Country.Region == "France")
View(covid_data)
covid_data <- read.csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv")
covid_data[covid_data$Country.Region == "France"]
covid_data$Country.Region == "France"
covid_data[covid_data$Country.Region == "France", ]
covid_data <- covid_data[covid_data$Country.Region == "France", ]
covid_data <- apply(X = covid_data[, c(5:ncols(covid_data))], MARGIN = 2, FUN = sum)
covid_data <- apply(X = covid_data[, c(5:ncol(covid_data))], MARGIN = 2, FUN = sum)
covid_data <- read.csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv")
covid_data <- covid_data[covid_data$Country.Region == "France", ]
covid_data <- apply(X = covid_data[, c(5:ncol(covid_data))], MARGIN = 2, FUN = sum)
ggplot(covid_data, aes(x = 5:ncol(covid_data), y = covid_data[])) +
geom_line(lwd = I(0.5), lty = 1) +
geom_point(cex = I(0.4)) +
coord_cartesian(xlim = c(1, nrow(covid_data)),
ylim = range(covid_data$X_Sweden)) +
labs(title = "COVID diseased count in the France",
subtitle = paste("to", min(covid_data$X),
"from", max(covid_data$X)),
x = "Date",
y = "Diseased count") +
scale_x_continuous(n.breaks = 15) +
scale_y_continuous(n.breaks = 15)
library(ggplot2)
ggplot(covid_data, aes(x = 5:ncol(covid_data), y = covid_data[])) +
geom_line(lwd = I(0.5), lty = 1) +
geom_point(cex = I(0.4)) +
coord_cartesian(xlim = c(1, nrow(covid_data)),
ylim = range(covid_data$X_Sweden)) +
labs(title = "COVID diseased count in the France",
subtitle = paste("to", min(covid_data$X),
"from", max(covid_data$X)),
x = "Date",
y = "Diseased count") +
scale_x_continuous(n.breaks = 15) +
scale_y_continuous(n.breaks = 15)
ggplot(aes(x = 5:ncol(covid_data), y = covid_data[])) +
geom_line(lwd = I(0.5), lty = 1) +
geom_point(cex = I(0.4)) +
coord_cartesian(xlim = c(1, nrow(covid_data)),
ylim = range(covid_data$X_Sweden)) +
labs(title = "COVID diseased count in the France",
subtitle = paste("to", min(covid_data$X),
"from", max(covid_data$X)),
x = "Date",
y = "Diseased count") +
scale_x_continuous(n.breaks = 15) +
scale_y_continuous(n.breaks = 15)
?aggregate
covid_data <- read.csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv")
View(covid_data)
covid_data <- aggregate(x = covid_data, by = Country.Region, FUN = sum)
covid_data <- aggregate(x = covid_data, by = list(Country.Region), FUN = sum)
source("C:/Users/maxxx/Downloads/PracticsR/sixth_task/prac10_part3.R", echo=TRUE)
covid_data <- aggregate(x = covid_data, by = list("Country.Region"), FUN = sum)
covid_data <- aggregate(x = covid_data, by = list("Country.Region"), FUN = sum)
covid_data <- aggregate(x = covid_data, by = list("Country.Region"), FUN = sum)
aggregate(x = covid_data, by = list("Country.Region"), FUN = sum)
covid_data <- aggregate(x = covid_data, by = list(covid_data$Country.Region), FUN = sum)
ggplot(covid_data[covid_data$Country.Region == "France", ],
aes(x = 5:ncol(covid_data), y = covid_data[])) +
geom_line(lwd = I(0.5), lty = 1) +
geom_point(cex = I(0.4)) +
coord_cartesian(xlim = c(1, nrow(covid_data)),
ylim = range(covid_data$X_Sweden)) +
labs(title = "COVID diseased count in the France",
subtitle = paste("to", min(covid_data$X),
"from", max(covid_data$X)),
x = "Date",
y = "Diseased count") +
scale_x_continuous(n.breaks = 15) +
scale_y_continuous(n.breaks = 15)
View(covid_data)
aggregate(covid_data[, c(5:length(covid_data))], by = list(covid_data$Country.Region), FUN = sum)
df <- aggregate(covid_data[, c(5:length(covid_data))], by = list(covid_data$Country.Region), FUN = sum)
View(df)
covid_data <- aggregate(covid_data[, c(5:length(covid_data))],
by = list(covid_data$Country.Region), FUN = sum)[,"France"]
View(covid_data)
df <- aggregate(covid_data[, c(5:length(covid_data))], by = list(covid_data$Country.Region), FUN = sum)
covid_data <- aggregate(covid_data[, c(5:length(covid_data))],
by = list(covid_data$Country.Region), FUN = sum)["France", ]
View(covid_data)
covid_data <- read.csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv")
covid_data <- aggregate(covid_data[, c(5:length(covid_data))],
by = list(covid_data$Country.Region), FUN = sum)
View(covid_data)
covid_data <- aggregate(covid_data[, c(5:length(covid_data))],
by = list(covid_data$Country.Region), FUN = sum)[covid_data$Group.1 == "France"]
covid_data <- aggregate(covid_data[, c(5:length(covid_data))],
by = list(covid_data$Country.Region), FUN = sum)[,covid_data$Group.1 == "France"]
covid_data <- aggregate(covid_data[, c(5:length(covid_data))],
by = list(covid_data$Country.Region), FUN = sum)[covid_data$Group.1 == "France", ]
covid_data$Group.1
covid_data$Group.1 == "France"
covid_data[Group.1 == "France"]
covid_data[covid_data$Group.1 == "France"]
covid_data[covid_data$Group.1 == "France", ]
df <- covid_data[covid_data$Group.1 == "France", ]
View(covid_data)
View(df)
covid_data <- covid_data[covid_data$Group.1 == "France", ]
library(ggplot2)
ggplot(covid_data[covid_data$Country.Region == "France", ],
aes(x = 5:ncol(covid_data), y = covid_data[])) +
geom_line(lwd = I(0.5), lty = 1) +
geom_point(cex = I(0.4)) +
coord_cartesian(xlim = c(, nrow(covid_data)),
ylim = range(covid_data$X_Sweden)) +
labs(title = "COVID diseased count in the France",
subtitle = paste("to", min(covid_data$X),
"from", max(covid_data$X)),
x = "Date",
y = "Diseased count") +
scale_x_continuous(n.breaks = 15) +
scale_y_continuous(n.breaks = 15)
ggplot(covid_data[covid_data$Country.Region == "France", ],
aes(x = 5:ncol(covid_data), y = covid_data[])) +
geom_line(lwd = I(0.5), lty = 1) +
geom_point(cex = I(0.4)) +
coord_cartesian(xlim = c(1, nrow(covid_data)),
ylim = range(covid_data$X_Sweden)) +
labs(title = "COVID diseased count in the France",
subtitle = paste("to", min(covid_data$X),
"from", max(covid_data$X)),
x = "Date",
y = "Diseased count") +
scale_x_continuous(n.breaks = 15) +
scale_y_continuous(n.breaks = 15)
View(covid_data)
"to", colnames(covid_data)[length(covid_data)],
ggplot(covid_data[covid_data$Country.Region == "France", ],
aes(x = 2:ncol(covid_data), y = covid_data[])) +
geom_line(lwd = I(0.5), lty = 1) +
geom_point(cex = I(0.4)) +
#coord_cartesian(xlim = c(1, ),
#               ylim = range(covid_data$X_Sweden)) +
labs(title = "COVID diseased count in the France",
subtitle = paste("from", colnames(covid_data)[2],
"to", colnames(covid_data)[length(covid_data)])
x = "Date",
ggplot(covid_data[covid_data$Country.Region == "France", ],
aes(x = 2:ncol(covid_data), y = covid_data[])) +
geom_line(lwd = I(0.5), lty = 1) +
geom_point(cex = I(0.4)) +
#coord_cartesian(xlim = c(1, ),
#               ylim = range(covid_data$X_Sweden)) +
labs(title = "COVID diseased count in the France",
subtitle = paste("from", colnames(covid_data)[2],
"to", colnames(covid_data)[length(covid_data)])
x = "Date",
ggplot(covid_data[covid_data$Country.Region == "France", ],
aes(x = 2:ncol(covid_data), y = covid_data[])) +
geom_line(lwd = I(0.5), lty = 1) +
geom_point(cex = I(0.4)) +
#coord_cartesian(xlim = c(1, ),
#               ylim = range(covid_data$X_Sweden)) +
labs(title = "COVID diseased count in the France",
subtitle = paste("from", colnames(covid_data)[2],"to", colnames(covid_data)[length(covid_data)])
x = "Date",
ggplot(covid_data[covid_data$Country.Region == "France", ],
aes(x = 2:ncol(covid_data), y = covid_data[])) +
geom_line(lwd = I(0.5), lty = 1) +
geom_point(cex = I(0.4)) +
#coord_cartesian(xlim = c(1, ),
#               ylim = range(covid_data$X_Sweden)) +
labs(title = "COVID diseased count in the France",
subtitle = paste("from", colnames(covid_data)[2],
"to", colnames(covid_data)[length(covid_data)]))
ggplot(covid_data, aes(x = 2:ncol(covid_data), y = covid_data[])) +
geom_line(lwd = I(0.5), lty = 1) +
geom_point(cex = I(0.4)) +
#coord_cartesian(xlim = c(1, ),
#               ylim = range(covid_data$X_Sweden)) +
labs(title = "COVID diseased count in the France",
subtitle = paste("from", colnames(covid_data)[2],
"to", colnames(covid_data)[length(covid_data)]))
ggplot(covid_data, aes(x = 2:ncol(covid_data), y = covid_data[])) +
geom_line(lwd = I(0.5), lty = 1) +
geom_point(cex = I(0.4)) +
#coord_cartesian(xlim = c(1, ),
#               ylim = range(covid_data$X_Sweden)) +
labs(title = "COVID diseased count in the France",
subtitle = paste("from", colnames(covid_data)[2],
"to", colnames(covid_data)[length(covid_data)]),
x = "Date",
y = "Diseased count")) +
ggplot(covid_data, aes(x = 2:ncol(covid_data), y = covid_data[])) +
geom_line(lwd = I(0.5), lty = 1) +
geom_point(cex = I(0.4)) +
#coord_cartesian(xlim = c(1, ),
#               ylim = range(covid_data$X_Sweden)) +
labs(title = "COVID diseased count in the France",
subtitle = paste("from", colnames(covid_data)[2],
"to", colnames(covid_data)[length(covid_data)]),
x = "Date",
y = "Diseased count") +
scale_x_continuous(n.breaks = 15) +
scale_y_continuous(n.breaks = 15)
ggplot(covid_data, aes(x = 2:ncol(covid_data), y = covid_data[])) +
geom_line(lwd = I(0.5), lty = 1) +
geom_point(cex = I(0.4)) +
#coord_cartesian(xlim = c(1, ),
#               ylim = range(covid_data$X_Sweden)) +
labs(title = "COVID diseased count in the France",
subtitle = paste("from", colnames(covid_data)[2],
"to", colnames(covid_data)[length(covid_data)]),
x = "Date",
y = "Diseased count") +
#scale_x_continuous(n.breaks = 15) +
#scale_y_continuous(n.breaks = 15)
ggplot(cvd, aes(X_Sweden)) +
geom_histogram(bins = 40, color = "blue", fill = "azure") +
geom_freqpoly(bins = 40, color = "black", lwd = I(1.1)) +
labs(title = "Гистограмма распределения данных",
subtitle = "Временной ряд заболеваемости ковид в Швеции",
x = "Количество переболевших") +
scale_x_continuous(n.breaks = 10) +
scale_y_continuous(n.breaks = 20)
ggplot(covid_data, aes(x = 2:ncol(covid_data), y = covid_data[])) +
geom_line(lwd = I(0.5), lty = 1) +
geom_point(cex = I(0.4)) +
#coord_cartesian(xlim = c(1, ),
#               ylim = range(covid_data$X_Sweden)) +
labs(title = "COVID diseased count in the France",
subtitle = paste("from", colnames(covid_data)[2],
"to", colnames(covid_data)[length(covid_data)]),
x = "Date",
y = "Diseased count") +
#scale_x_continuous(n.breaks = 15) +
#scale_y_continuous(n.breaks = 15)
ggplot(cvd, aes(X_Sweden)) +
geom_histogram(bins = 40, color = "blue", fill = "azure") +
geom_freqpoly(bins = 40, color = "black", lwd = I(1.1)) +
labs(title = "Гистограмма распределения данных",
subtitle = "Временной ряд заболеваемости ковид в Швеции",
x = "Количество переболевших") +
scale_x_continuous(n.breaks = 10) +
scale_y_continuous(n.breaks = 20)
ggplot(covid_data, aes(x = 2:ncol(covid_data), y = covid_data[])) +
geom_line(lwd = I(0.5), lty = 1) +
geom_point(cex = I(0.4)) +
#coord_cartesian(xlim = c(1, ),
#               ylim = range(covid_data$X_Sweden)) +
labs(title = "COVID diseased count in the France",
subtitle = paste("from", colnames(covid_data)[2],
"to", colnames(covid_data)[length(covid_data)]),
x = "Date",
y = "Diseased count")
scale_x_continuous(n.breaks = 15) +
scale_y_continuous(n.breaks = 15)
ggplot(covid_data, aes(x = 2:ncol(covid_data), y = covid_data[])) +
geom_line(lwd = I(0.5), lty = 1) +
geom_point(cex = I(0.4)) +
#coord_cartesian(xlim = c(1, ),
#               ylim = range(covid_data$X_Sweden)) +
labs(title = "COVID diseased count in the France",
subtitle = paste("from", colnames(covid_data)[2],
"to", colnames(covid_data)[length(covid_data)]),
x = "Date",
y = "Diseased count")+
scale_x_continuous(n.breaks = 15) +
scale_y_continuous(n.breaks = 15)
ggplot(covid_data, aes(x = 2:ncol(covid_data))) +
geom_line(lwd = I(0.5), lty = 1) +
geom_point(cex = I(0.4)) +
#coord_cartesian(xlim = c(1, ),
#               ylim = range(covid_data$X_Sweden)) +
labs(title = "COVID diseased count in the France",
subtitle = paste("from", colnames(covid_data)[2],
"to", colnames(covid_data)[length(covid_data)]),
x = "Date",
y = "Diseased count") +
scale_x_continuous(n.breaks = 15) +
scale_y_continuous(n.breaks = 15)
ggplot(covid_data, aes(x = colnames(covid_data[,c(2:length(covid_data))]),
y = covid_data[, c(2:length(covid_data))])) +
geom_line(lwd = I(0.5), lty = 1) +
geom_point(cex = I(0.4)) +
#coord_cartesian(xlim = c(1, ),
#               ylim = range(covid_data$X_Sweden)) +
labs(title = "COVID diseased count in the France",
subtitle = paste("from", colnames(covid_data)[2],
"to", colnames(covid_data)[length(covid_data)]),
x = "Date",
y = "Diseased count") +
scale_x_continuous(n.breaks = 15) +
scale_y_continuous(n.breaks = 15)
colnames(covid_data[,c(2:length(covid_data))])
y = covid_data[, c(2:length(covid_data))])
covid_data[, c(2:length(covid_data))]
covid_data[, c(2:length(covid_data)]
covid_data[, c(2:length(covid_data))]
covid_data[]
