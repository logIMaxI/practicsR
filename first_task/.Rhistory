#---------------------------(3)
ages <- sample(16:75, 100,replace=T)
views <- c("right","left","moderate","indifferent")
polit <- sample(views, 100, replace=T)
df <- data.frame(list(names,ages,polit))
colnames(df) <- c("names","ages","polit")
#---------------------------(4)
id <- c(1:100)
df$id <- id
#---------------------------(5)
data <- length(df$ages[df$ages >= 25 & df$ages <= 30])
part <- round((data / lenght(df$ages))*100, 1)
#---------------------------(1)
library(randomNames)
#---------------------------(2)
set.seed(1234)
names <- randomNames(100,which.names = "first",ethnicity = 4)
#---------------------------(3)
ages <- sample(16:75, 100,replace=T)
views <- c("right","left","moderate","indifferent")
polit <- sample(views, 100, replace=T)
df <- data.frame(list(names,ages,polit))
colnames(df) <- c("names","ages","polit")
#---------------------------(4)
id <- c(1:100)
df$id <- id
#---------------------------(5)
data <- length(df$ages[df$ages >= 25 & df$ages <= 30])
part <- round((data / length(df$ages))*100, 1)
part
#---------------------------(6)
polit_views <- as.factor(polit)
levels(polit_views)
df$polit_views <- polit_views
View(df)
View(df)
mtcars
Ornstein
nrow(mtcars)
cars
cars
ornstein <- read.csv("ornstein.csv")
ornstein <- read.csv("ornstein.csv")
#---------------------------(1)
ornstein <- read.csv("ornstein.csv")
ornstein <- read.csv("data_orn.csv")
read.csv("ornstein.csv")
read.csv("data_orn.csv")
#---------------------------(1)
ornstein <- read.csv("data_orn.csv")
data_orn <- read.csv("data_orn.csv")
#---------------------------(1)
data <- read.csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv")
View(data)
View(data)
#---------------------------(2)
summary(data)
install.packages("glimpse")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
#---------------------------(2)
library(dplyr)
library(dplyr)
summary(data)
glimpse(data)
summary(data)
glimpse(data)
summary(data)
glimpse(x = data, width = 100)
library(tidyr)
View(data)
new_vector <- unite(data = data, sep = '/',
col = Province.State:Country.Region, remove=F)
sum <- aggregate(data$X1.22.20:data$X3.9.23,
by = list(data$Country.Region, FUN = sum))
sum <- aggregate(data$X1.22.20:data$X3.9.23,
by = list(data$Country.Region), FUN = sum))
sum <- aggregate(data$X1.22.20:data$X3.9.23,
by = list(data$Country.Region), FUN = sum)
#---------------------------(4)
sum <- aggregate(data$X1.22.20,
by = list(data$Country.Region), FUN = sum)
View(sum)
#---------------------------(4)
sum_vec <- apply(X = data[,-c("Province.State","Country.Region",
"Lat","Long")],MARGIN = 1, FUN = sum)
#---------------------------(4)
sum_vec <- apply(X = data[,-c("Province.State","Country.Region",
"Lat","Long")],MARGIN = 2, FUN = sum)
#---------------------------(4)
sum_vec <- apply(X = data[,c(-"Province.State","Country.Region",
"Lat","Long")],MARGIN = 2, FUN = sum)
data[1]
data[2]
data[,-c(1:4)]
#---------------------------(4)
sum_vec <- apply(X = data[,-c(1:4)],MARGIN = 2, FUN = sum)
sum <- aggregate(data$sum_vec,
by = list(data$Country.Region), FUN = sum)
#---------------------------(4)
data&sum_vec <- apply(X = data[,-c(1:4)],MARGIN = 2, FUN = sum)
#---------------------------(4)
data&sum_vec <- apply(X = data[,-c(1:4)],MARGIN = 2, FUN = sum)
data&sum_vec <- apply(X = data[,-c(1:4)],MARGIN = 2, FUN = sum)
data$sum_vec <- apply(X = data[,-c(1:4)],MARGIN = 2, FUN = sum)
#---------------------------(4)
data$sum_vec <- apply(X = data[,-c(1:4)],MARGIN = 1, FUN = sum)
sum <- aggregate(data$sum_vec,
by = list(data$Country.Region), FUN = sum)
View(sum)
View(sum)
data[3,]
data[3,c(1:4)]
data[3,5]
sum(data[3,-c(1:4)])
data[3,-c(1:4)]
data$sum_vec <- apply(X = data[,-c(1:4)],MARGIN = 1, FUN = sum)
sum <- aggregate(data$sum_vec,
by = list(data$Country.Region), FUN = sum)
df <- data.frame(data = list(new_vector,data$Lat,data$Long,
sum, mean(data$sum_vec), sd(data$sum_vec)))
new_vector <- unite(data = data, sep = '/',
col = Province.State:Country.Region, remove=F)
new_vector <- paste(data$Country.Region,'/',data$Province.State)
#---------------------------(4)
data$sum_vec <- apply(X = data[,-c(1:4)],MARGIN = 1, FUN = sum)
sum <- aggregate(data$sum_vec,
by = list(data$Country.Region), FUN = sum)
df <- data.frame(data = list(new_vector,data$Lat,data$Long,
sum, mean(data$sum_vec), sd(data$sum_vec)))
new_vector <- paste(data$Country.Region,'/',data$Province.State)
#---------------------------(1)
data_orn <- read.csv("data_orn.csv")
#---------------------------(1)
data_orn <- read.csv("data_orn.csv")
#---------------------------(1)
data_orn <- read.csv(file = "data_orn.csv",header = T)
getwd()
write_in_file <- function(path, step_x,
dekart_begin_x, dekart_end_x,
step_y, dekart_begin_y,
dekart_end_y){
x <- seq(from = dekart_begin_x,to = dekart_end_x,
by = step_x)
y <- seq(from = dekart_begin_y, to = dekart_end_y,
by = step_y)
surface_matrix <- outer(X = x,Y = y,FUN = function(x,y)
Re(exp(-1i*0.5*x*y)))
dimnames(surface_matrix) <- list(x,y)
write(x = "number of matrix elements: ", file = path,
sep = " ")
write(x = ncol(surface_matrix)*nrow(surface_matrix),
file = path, sep = " ", append = T)
write(x = "number of rows: ", file = path,
sep = " ", append = T)
write(x = nrow(surface_matrix), file = path,
sep = " ", append = T)
write(x = "number of cols: ", file = path,
sep = " ", append = T)
write(x = ncol(surface_matrix), file = path,
sep = " ", append = T)
write(x = "sum of main diag elements: ", file = path,
sep = " ", append = T)
write(x = sum(diag(surface_matrix)), file = path,
sep = " ", append = T)
write(x = "row sums: ", file = path, sep = " ", append = T)
write(x = apply(X = surface_matrix, MARGIN = 1,FUN = sum),
file = path, sep = " ", append = T)
write(x = "col sums: ", file = path, sep = " ", append = T)
write(x = apply(X = surface_matrix, MARGIN = 2,FUN = sum),
file = path, sep = " ", append = T)
return (surface_matrix)
}
#----------------------------(1)
surface_matrix <- write_in_file("summary.txt",1,-5,5,1,-5,5)
path <- "summary.txt"
write(x = "sum of middle row elements: ",
file = path, sep = " ", append = T)
result <- sum(surface_matrix[,ncol(surface_matrix)/2 +
ncol(surface_matrix) %% 2])
write(x = result, file = path, sep = " ", append = T)
write(x = "sum of middle column elements: ",
file = path, sep = " ", append = T)
result <- sum(surface_matrix[nrow(surface_matrix)/2 +
nrow(surface_matrix) %% 2,])
write(x = result, file = path, sep = " ", append = T)
#----------------------------(2)
step <- as.numeric(readline(
prompt = "Введите параметр step: "))
prompt = "Введите параметр dekart_begin: "))
write_in_file <- function(path, step_x,
dekart_begin_x, dekart_end_x,
step_y, dekart_begin_y,
dekart_end_y){
x <- seq(from = dekart_begin_x,to = dekart_end_x,
by = step_x)
y <- seq(from = dekart_begin_y, to = dekart_end_y,
by = step_y)
surface_matrix <- outer(X = x,Y = y,FUN = function(x,y)
Re(exp(-1i*0.5*x*y)))
dimnames(surface_matrix) <- list(x,y)
write(x = "number of matrix elements: ", file = path,
sep = " ")
write(x = ncol(surface_matrix)*nrow(surface_matrix),
file = path, sep = " ", append = T)
write(x = "number of rows: ", file = path,
sep = " ", append = T)
write(x = nrow(surface_matrix), file = path,
sep = " ", append = T)
write(x = "number of cols: ", file = path,
sep = " ", append = T)
write(x = ncol(surface_matrix), file = path,
sep = " ", append = T)
write(x = "sum of main diag elements: ", file = path,
sep = " ", append = T)
write(x = sum(diag(surface_matrix)), file = path,
sep = " ", append = T)
write(x = "row sums: ", file = path, sep = " ", append = T)
write(x = apply(X = surface_matrix, MARGIN = 1,FUN = sum),
file = path, sep = " ", append = T)
write(x = "col sums: ", file = path, sep = " ", append = T)
write(x = apply(X = surface_matrix, MARGIN = 2,FUN = sum),
file = path, sep = " ", append = T)
return (surface_matrix)
}
#----------------------------(1)
surface_matrix <- write_in_file("summary.txt",1,-5,5,1,-5,5)
path <- "summary.txt"
write(x = "sum of middle row elements: ",
file = path, sep = " ", append = T)
result <- sum(surface_matrix[,ncol(surface_matrix)/2 +
ncol(surface_matrix) %% 2])
write(x = result, file = path, sep = " ", append = T)
write(x = "sum of middle column elements: ",
file = path, sep = " ", append = T)
result <- sum(surface_matrix[nrow(surface_matrix)/2 +
nrow(surface_matrix) %% 2,])
step <- as.numeric(readline(
prompt = "Введите параметр step: "))
dekart_begin <- as.numeric(readline(
prompt = "Введите параметр dekart_begin: "))
dekart_end <- as.numeric(readline(
prompt = "Введите параметр dekart_end: "))
write_in_file("summary2.txt", step, dekart_begin, dekart_end,
step, dekart_begin, dekart_end)
#---------------------------(1)
data_orn <- read.csv(file = "data_orn.csv",header = T)
#---------------------------(1)
data_orn <- read.csv(file = "data_orn.csv",header = T)
getwd()
setwd("C:/Users/maxxx/Downloads/PracticsR/second_task")
#---------------------------(1)
data_orn <- read.csv(file = "data_orn.csv",header = T)
#---------------------------(1)
data_orn <- read.csv(file = "data_orn.csv",header = T)
View(data_orn)
View(data_orn)
summary(data_orn)
str(data_orn)
#---------------------------(3)
data_orn[is.na(data_orn)]
#---------------------------(3)
data_orn[complete.cases(data_orn)]
#---------------------------(3)
data_orn[complete.cases(data_orn),]
#---------------------------(3)
data_orn[-complete.cases(data_orn),]
#---------------------------(3)
data_orn[-complete.cases(data_orn),]
data_orn[-complete.cases(data_orn),]
#---------------------------(3)
data_orn[-(complete.cases(data_orn)),]
#---------------------------(3)
complete.cases(data_orn)
#---------------------------(3)
-complete.cases(data_orn)
#---------------------------(3)
data_orn[complete.cases(data_orn),]
#---------------------------(3)
data_orn[!complete.cases(data_orn),]
#---------------------------(1)
data_orn <- read.csv(file = "data_orn.csv",header = T)
#---------------------------(2)
summary(data_orn)
str(data_orn)
#---------------------------(3)
data_orn[!complete.cases(data_orn),]
#---------------------------(4)
data_orn <- data_orn[data_orn$assets <= 20000 & data_orn$assets >= 10000, ]
data_orn <- data_orn[data_orn$interlocks <= 30, ]
data_orn <- data_orn[data_orn$sector == "TRA" & data_orn$nation=="CAN", ]
View(data_orn)
View(data_orn)
data_orn <- read.csv(file = "data_orn.csv",header = T)
#---------------------------(2)
summary(data_orn)
str(data_orn)
#---------------------------(3)
data_orn[!complete.cases(data_orn),]
data_orn <- data_orn[data_orn$assets <= 20000 & data_orn$assets >= 10000, ]
View(data_orn)
View(data_orn)
data_orn <- data_orn[data_orn$interlocks <= 30, ]
data_orn <- data_orn[data_orn$sector == "TRN" & data_orn$nation=="CAN", ]
#---------------------------(1)
data_orn <- read.csv(file = "data_orn.csv",header = T)
#---------------------------(2)
summary(data_orn)
str(data_orn)
#---------------------------(3)
data_orn[!complete.cases(data_orn),]
#---------------------------(4)
data_orn <- data_orn[data_orn$assets <= 20000 & data_orn$assets >= 10000, ]
data_orn <- data_orn[data_orn$interlocks <= 30, ]
mtcars
cars
Ornstein
install.packages("car")
library(car)
data_orn <- Ornstein
#---------------------------(2)
summary(data_orn)
str(data_orn)
#---------------------------(3)
data_orn[!complete.cases(data_orn),]
#---------------------------(4)
data_orn <- data_orn[data_orn$assets <= 20000 & data_orn$assets >= 10000, ]
data_orn <- data_orn[data_orn$interlocks <= 30, ]
data_orn <- data_orn[data_orn$sector == "TRN" & data_orn$nation=="CAN", ]
data_orn <- Ornstein
library(car)
data_orn <- Ornstein
#---------------------------(2)
summary(data_orn)
str(data_orn)
#---------------------------(3)
data_orn[!complete.cases(data_orn),]
#---------------------------(4)
data_a <- data_orn[data_orn$assets <= 20000 & data_orn$assets >= 10000, ]
data_b <- data_orn[data_orn$interlocks <= 30, ]
data_c <- data_orn[data_orn$sector == "TRN" & data_orn$nation=="CAN", ]
View(data_c)
View(data_c)
View(data_c)
View(data_b)
View(data_b)
View(data_a)
View(data_a)
#---------------------------(5)
data_orn$log_assets <- log(data_orn$assets)
#---------------------------(3)
data_orn[!complete.cases(data_orn),]
#---------------------------(6)
library(ggplot2)
library(ggplot2)
ggplot(data = data_orn)+
geom_line(mapping = aes(x = asserts, y = interlocks, color = sector))+
geom_point(mapping = aes(x = asserts, y = interlocks, shape = nation, size = 20))
ggplot(data = data_orn)+
geom_line(mapping = aes(x = assets, y = interlocks, color = sector))+
geom_point(mapping = aes(x = assets, y = interlocks, shape = nation, size = 20))
ggplot(data = data_orn)+
geom_line(mapping = aes(x = assets, y = interlocks, color = sector))+
geom_point(mapping = aes(x = assets, y = interlocks, color = sector, size = 5))
ggplot(data = data_orn)+
geom_line(mapping = aes(x = assets, y = interlocks, color = sector))+
geom_point(mapping = aes(x = assets, y = interlocks, color = sector, size = 0.5))
ggplot(data = data_orn)+
geom_line(mapping = aes(x = assets, y = interlocks, color = sector))
ggplot(data = data_orn)+
geom_line(mapping = aes(x = assets, y = interlocks, color = nation))
ggplot(data = data_orn)+
geom_line(mapping = aes(x = interlocks, y = assets, color = nation))
ggplot(data = data_orn)+
geom_line(mapping = aes(x = interlocks, y = assets, color = nation, size = 2))
ggplot(data = data_orn)+
geom_line(mapping = aes(x = interlocks, y = assets, color = nation, size = 0.02))
ggplot(data = data_orn)+
geom_line(mapping = aes(x = interlocks, y = assets, color = nation))
#---------------------------(6)
write(x = data_orn, file = "Firms.dta")
#---------------------------(6)
write.table(x = data_orn, file = "Firms.dta")
path <- "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_
time_series/time_series_covid19_confirmed_global.csv"
data <- read.csv(path)
path <- "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_
time_series/time_series_covid19_confirmed_global.csv"
data <- read.csv(path)
path <- "https://raw.githubusercontent.com//CSSEGISandData//COVID-19//master//csse_covid_19_data//csse_covid_19_
time_series//time_series_covid19_confirmed_global.csv"
data <- read.csv(path)
path <- "https:///raw.githubusercontent.com//CSSEGISandData//COVID-19//master//csse_covid_19_data//csse_covid_19_
time_series//time_series_covid19_confirmed_global.csv"
data <- read.csv(path)
path <- "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv"
data <- read.csv(path)
library(dplyr)
summary(data)
str(data)
new_vector <- paste(data$Country.Region,'/',data$Province.State)
new_vector[1]
new_vector[2]
View(data)
new_vector[10]
#---------------------------(4)
data$sum_vec <- apply(X = data[,-c(1:4)],MARGIN = 1, FUN = sum)
sum <- aggregate(data$sum_vec,
by = list(data$Country.Region), FUN = sum)
View(sum)
data$sum_vec
View(data)
View(data)
View(data)
sum(data$sum_vec)
View(data)
View(data)
#---------------------------(4)
sum <- aggregate(data$X3.9.23,by = list(data$Country.Region), FUN = sum)
View(sum)
View(sum)
sum(sum$x)
aggregate(data$Lat, by = list(data$Country.Region))
aggregate(data$Lat, by = list(data$Country.Region), FUN = mean)
#---------------------------(4)
sum <- aggregate(data$X3.9.23,by = list(data$Country.Region), FUN = sum)$x
#---------------------------(4)
sum <- aggregate(data$X3.9.23,by = list(data$Country.Region), FUN = sum)
#---------------------------(1)
path <- "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv"
data <- read.csv(path)
#---------------------------(2)
library(dplyr)
summary(data)
str(data)
glimpse(x = data)
#---------------------------(3)
library(tydir)
new_vector <- paste(data$Country.Region,'/',data$Province.State)
#---------------------------(4)
sum <- aggregate(data$X3.9.23,by = list(data$Country.Region), FUN = sum)
lats <- aggregate(data$Lat, by = list(data$Country.Region), FUN = mean)$x
longs <- aggregate(data$Long, by = list(data$Country.Region), FUN = mean)$x
df <- data.frame(data = list(sum, lats, longs,
aggregate(data$X3.9.23,by = list(data$Country.Region), FUN = mean),
aggregate(data$X3.9.23,by = list(data$Country.Region), FUN = sd)))
colnames(df) <- c("Страна/Регион", "Широта","Долгота","Сумма заболевших",
"Среднее число заболевших","Стандартное отклонение числа заболевших")
df
View(df)
View(df)
sum <- aggregate(data$X3.9.23,by = list(data$Country.Region), FUN = sum)$x
lats <- aggregate(data$Lat, by = list(data$Country.Region), FUN = mean)
longs <- aggregate(data$Long, by = list(data$Country.Region), FUN = mean)$x
df <- data.frame(data = list(lats,longs,sum
aggregate(data$X3.9.23,by = list(data$Country.Region), FUN = mean),
path <- "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv"
data <- read.csv(path)
new_vector <- paste(data$Country.Region,'/',data$Province.State)
#---------------------------(4)
sum <- aggregate(data$X3.9.23,by = list(data$Country.Region), FUN = sum)$x
lats <- aggregate(data$Lat, by = list(data$Country.Region), FUN = mean)
longs <- aggregate(data$Long, by = list(data$Country.Region), FUN = mean)$x
df <- data.frame(data = list(lats,longs,sum
aggregate(data$X3.9.23,by = list(data$Country.Region), FUN = mean),
df <- data.frame(data = list(lats,longs,sum,
aggregate(data$X3.9.23,by = list(data$Country.Region), FUN = mean),
aggregate(data$X3.9.23,by = list(data$Country.Region), FUN = sd)))
colnames(df) <- c("Страна/Регион", "Широта","Долгота","Сумма заболевших",
"Среднее число заболевших","Стандартное отклонение числа заболевших")
df
df <- data.frame(data = list(lats,longs,sum,
aggregate(data$X3.9.23,by = list(data$Country.Region), FUN = mean)$x,
aggregate(data$X3.9.23,by = list(data$Country.Region), FUN = sd)$x))
colnames(df) <- c("Страна/Регион", "Широта","Долгота","Сумма заболевших",
"Среднее число заболевших","Стандартное отклонение числа заболевших")
colnames(df[, -c(1:4)])
colnames(data[, -c(1:4)])
as.Date("15.03.2022")
as.Date(12)
View(data)
View(data)
names <- colnames(data[,-c(1:4)])
date <- as.Date(names, format = "X%m.%d.%y")
date
?unite
#---------------------------(3)
new_vector <- unite(data = data, col = list(Province.State, Country.Region))
#---------------------------(3)
new_vector <- unite(data = data, col = list(Province.State, Country.Region), sep='/')
new_vector
stringr::str_extract(new_vector, "[A-Za-z]+/[A-Za-z]")
stringr::str_extract(new_vector, "[A-Za-z]+/[A-Za-z]+")
stringr::str_extract(new_vector, "[A-Za-z]+")
stringr::str_extract(new_vector, "[A-Za-z]+/")
stringr::str_extract(new_vector, "/[A-Za-z]+)
w
w,sml;qax,
""
"
stringr::str_extract(new_vector, "/[A-Za-z]+")
stringr::str_extract(new_vector, "[A-Za-z]+")
stringr::str_extract(new_vector, "[A-Za-z]+/.*")
stringr::str_extract(new_vector, "[A-Za-z]+ /.*")
View(lats)
View(lats)
stringr::str_extract(new_vector, "/.*")
stringr::str_extract(new_vector[121], "[A-Za-z]+ /.*")
strsplit(stringr::str_extract(new_vector[121], "[A-Za-z]+ /.*"), " / ")
unlist(strsplit(stringr::str_extract(new_vector[121], "[A-Za-z]+ /.*"), " / "))
unlist(strsplit(stringr::str_extract(new_vector, "[A-Za-z]+ /.*"), " / "))
